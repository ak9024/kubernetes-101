apiVersion: v1
kind: Secret
metadata:
  name: dotfile-secret
  namespace: kubernetes-101
data:
  # need to convert that value to base64
  # cat ../secret/.env | base64
  .env: c2VjcmV0X2tleT1zZWNyZXRfdmFsdWUK
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: file-config
  namespace: kubernetes-101
data:
  # create configmap to prepare configuration than insert to pod
  config.yaml: |
    config_key=config_value
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: golang-api
  namespace: kubernetes-101
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: golang-api
  minReplicas: 1
  maxReplicas: 3 # maximum replicas
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50 # if cpu utilization greater than 50% exec autoscaling
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 50 # if memory utilization greater than 50% exec autoscaling
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: golang-api-deployment
  namespace: kubernetes-101
  labels:
    app: golang-api
spec:
  selector:
    matchLabels:
      app: golang-api
  replicas: 1
  template:
    metadata:
      labels:
        app: golang-api
    spec:
      hostname: golang-api
      containers:
        - name: golang-api
          image: golang-api:v2
          imagePullPolicy: IfNotPresent
          ports:
            - name: golang-api-port
              containerPort: 8000
          livenessProbe:
            httpGet:
              path: /health
              port: golang-api-port
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 1
            successThreshold: 1
          resources:
            requests:
              memory: "54Mi"
              cpu: "250m"
            limits:
              memory: "54Mi"
              cpu: "250m"
          env:
            - name: MESSAGE
              value: hello world
            # get env from secret path
            - name: SECRET_FILE
              valueFrom:
                secretKeyRef:
                  name: dotfile-secret
                  key: .env
          # get env from configmap path
          envFrom:
            - configMapRef:
                name: file-config
          # mapping secret & configmap to pod
          volumeMounts:
            - name: secret-volume
              readOnly: true
              mountPath: "/secret" # setup secret path
            - name: config
              readOnly: true
              mountPath: "/config" # setup config path
      volumes:
        - name: secret-volume
          secret:
            secretName: dotfile-secret
        - name: config
          configMap:
            name: file-config
            items:
            - key: "config.yaml"
              path: "config.yaml"
---
apiVersion: v1
kind: Service
metadata:
  name: golang-api-service
  namespace: kubernetes-101
spec:
  selector:
    app: golang-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: golang-api-port
  type: LoadBalancer # default ClusterIP, options: NodePort, LoadBalancer
