apiVersion: v1
kind: Secret
metadata:
  name: dotfile-secret
  namespace: kubernetes-101
data:
  # need to convert that value to base64
  .secret-file: Z29sYW5nLWFwaS1zZWNyZXQK
  secret-value: aGVsbG8gdGVzdAo=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: special-config
  namespace: kubernetes-101
data:
  CONFIG: setup config using config map
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: golang-api
  namespace: kubernetes-101
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: golang-api
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: golang-api-deployment
  namespace: kubernetes-101
  labels:
    app: golang-api
spec:
  selector:
    matchLabels:
      app: golang-api
  replicas: 1
  template:
    metadata:
      labels:
        app: golang-api
    spec:
      volumes:
        - name: secret-volume
          secret:
            secretName: dotfile-secret
      hostname: golang-api
      containers:
        - name: golang-api
          image: golang-api:v1
          livenessProbe:
            httpGet:
              path: /health
              port: golang-api-port
            periodSeconds: 10
            failureThreshold: 1
            successThreshold: 1
          resources:
            requests:
              memory: "54Mi"
              cpu: "250m"
            limits:
              memory: "54Mi"
              cpu: "250m"
          env:
            - name: MESSAGE
              value: hello world
            # get env from secret
            - name: SECRET_FILE
              valueFrom:
                secretKeyRef:
                  name: dotfile-secret
                  key: .secret-file
            - name: SECRET_VALUE
              valueFrom:
                secretKeyRef:
                  name: dotfile-secret
                  key: secret-value
          # get env from configmap
          envFrom:
            - configMapRef:
                name: special-config
          imagePullPolicy: IfNotPresent
          ports:
            - name: golang-api-port
              containerPort: 8000
              hostPort: 8000
          # mapping secret to pod
          # volumeMounts:
          #   - name: secret-volume
          #     readOnly: true
          #     mountPath: "/etc/secret-volume"
---
apiVersion: v1
kind: Service
metadata:
  name: golang-api-service
  namespace: kubernetes-101
spec:
  type: NodePort
  selector:
    app: golang-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: golang-api-port 
      nodePort: 30000 # expose static port to node
